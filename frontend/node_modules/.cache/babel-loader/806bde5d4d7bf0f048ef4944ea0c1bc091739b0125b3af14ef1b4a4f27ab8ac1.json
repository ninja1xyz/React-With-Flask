{"ast":null,"code":"var _jsxFileName = \"/home/hassan/python task/frontend/src/components/FileUploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport SummaryText from './SummaryText';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUploadForm = () => {\n  _s();\n  const initialValues = {\n    file: null\n  };\n  const [loading, setLoading] = useState(false);\n  const [orignalText, setOrignalText] = useState(null);\n  const [summeryText, setSummeryText] = useState(null);\n  const validationSchema = Yup.object({\n    file: Yup.mixed().required('File is required').test('fileFormat', 'Invalid file format. Only PDF files are allowed.', value => value && value.type === 'application/pdf')\n  });\n  const onSubmit = async values => {\n    try {\n      setLoading(true);\n      const formData = new FormData();\n      formData.append('file', values.file);\n      const response = await axios.post('http://127.0.0.1:5000/api/upload', formData);\n      let jsonData = response.data;\n      if (response) {\n        setOrignalText(jsonData.original_text);\n        setSummeryText(jsonData.resulted_text.summary_text);\n      }\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file\",\n          className: \"form-label\",\n          children: \"Upload PDF for Text Summarization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"file\",\n          name: \"file\",\n          type: \"file\",\n          className: \"form-control\",\n          onChange: event => formik.setFieldValue('file', event.target.files[0]),\n          onBlur: formik.handleBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), formik.touched.file && formik.errors.file ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: 'red'\n          },\n          children: formik.errors.file\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: loading ? \"displayLoader\" : \"hideLoader\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-border mt-3\",\n          role: \"status\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"visually-hidden\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary mt-3\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SummaryText, {\n      summeryText: summeryText,\n      orignalText: orignalText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(FileUploadForm, \"6QM6iO1CO7ghNfl1yQW+5qlCzXo=\", false, function () {\n  return [useFormik];\n});\n_c = FileUploadForm;\nexport default FileUploadForm;\nvar _c;\n$RefreshReg$(_c, \"FileUploadForm\");","map":{"version":3,"names":["React","useState","useEffect","useFormik","Yup","axios","SummaryText","jsxDEV","_jsxDEV","FileUploadForm","_s","initialValues","file","loading","setLoading","orignalText","setOrignalText","summeryText","setSummeryText","validationSchema","object","mixed","required","test","value","type","onSubmit","values","formData","FormData","append","response","post","jsonData","data","original_text","resulted_text","summary_text","error","console","formik","className","children","handleSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","name","onChange","event","setFieldValue","target","files","onBlur","handleBlur","touched","errors","style","color","role","_c","$RefreshReg$"],"sources":["/home/hassan/python task/frontend/src/components/FileUploadForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport SummaryText from './SummaryText';\n\nconst FileUploadForm = () => {\n    const initialValues = { file: null };\n    const [loading, setLoading] = useState(false);\n    const [orignalText, setOrignalText] = useState(null);\n    const [summeryText, setSummeryText] = useState(null);\n\n    const validationSchema = Yup.object({\n        file: Yup.mixed()\n            .required('File is required')\n            .test(\n                'fileFormat',\n                'Invalid file format. Only PDF files are allowed.',\n                (value) => value && value.type === 'application/pdf'\n            ),\n    });\n\n    const onSubmit = async (values) => {\n        try {\n            setLoading(true);\n            const formData = new FormData();\n            formData.append('file', values.file);\n\n            const response = await axios.post('http://127.0.0.1:5000/api/upload', formData);\n            let jsonData = response.data;\n\n            if (response) {\n                setOrignalText(jsonData.original_text);\n                setSummeryText(jsonData.resulted_text.summary_text);\n            }\n        } catch (error) {\n            console.error('Error uploading file:', error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const formik = useFormik({\n        initialValues,\n        validationSchema,\n        onSubmit,\n    });\n\n    return (\n        <div className='mt-5'>\n            <form onSubmit={formik.handleSubmit}>\n                <div>\n                    <label htmlFor=\"file\" className=\"form-label\">Upload PDF for Text Summarization</label>\n                    <input\n                        id=\"file\"\n                        name=\"file\"\n                        type=\"file\"\n                        className=\"form-control\"\n                        onChange={(event) => formik.setFieldValue('file', event.target.files[0])}\n                        onBlur={formik.handleBlur}\n                    />\n                    {formik.touched.file && formik.errors.file ? (\n                        <div style={{ color: 'red' }}>{formik.errors.file}</div>\n                    ) : null}\n                </div>\n\n                <div className={loading ? \"displayLoader\" : \"hideLoader\"}>\n                    <div className='spinner-border mt-3' role=\"status\">\n                        <span className=\"visually-hidden\">Loading...</span>\n                    </div>\n                </div>\n\n                <div>\n                    <button type=\"submit\" className=\"btn btn-primary mt-3\">Submit</button>\n                </div>\n\n            </form>\n\n            <SummaryText summeryText={summeryText} orignalText={orignalText} />\n        </div>\n    );\n};\n\nexport default FileUploadForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}