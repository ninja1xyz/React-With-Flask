{"ast":null,"code":"var _jsxFileName = \"/home/hassan/python task/frontend/src/components/FileUploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUploadForm = () => {\n  _s();\n  const initialValues = {\n    file: null\n  };\n  const [summeryData, SetSummeryData] = useState({});\n  const [orignalText, SetOrignalText] = useState(null);\n  const [summeryText, SetSummeryText] = useState(null);\n  const [displayedWordIndex, setDisplayedWordIndex] = useState(0);\n  const validationSchema = Yup.object({\n    file: Yup.mixed().required('File is required').test('fileFormat', 'Invalid file format. Only PDF files are allowed.', value => value && value.type === 'application/pdf')\n  });\n  const onSubmit = async values => {\n    try {\n      const formData = new FormData();\n      formData.append('file', values.file);\n      const response = await axios.post('http://127.0.0.1:5000/api/upload', formData);\n      SetSummeryData(response.data);\n      let jsonData = response.data;\n      // console.log(\"response.original_text\",response.original_text);\n      // console.log(\"response.resulted_text.summary_text\",response.resulted_text.summary_text);\n\n      if (response) {\n        SetOrignalText(jsonData.original_text);\n        SetSummeryText(jsonData.resulted_text.summary_text);\n      }\n      console.log(\"data\", orignalText, summeryText);\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    }\n  };\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit\n  });\n  useEffect(() => {\n    // Display words one by one with a delay of 500 milliseconds\n    const intervalId = setInterval(() => {\n      setDisplayedWordIndex(prevIndex => prevIndex + 1);\n    }, 500);\n\n    // Clear the interval when all words are displayed\n    if (displayedWordIndex === summaryText.split(' ').length) {\n      clearInterval(intervalId);\n    }\n\n    // Cleanup function to clear the interval when the component unmounts\n    return () => clearInterval(intervalId);\n  }, [displayedWordIndex, summaryText]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file\",\n        className: \"form-label\",\n        children: \"Upload PDF for Text Summarization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"file\",\n        name: \"file\",\n        type: \"file\",\n        className: \"form-control\",\n        onChange: event => formik.setFieldValue('file', event.target.files[0]),\n        onBlur: formik.handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), formik.touched.file && formik.errors.file ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: formik.errors.file\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary mt-3\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), orignalText ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: orignalText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this) : null, summeryText ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: summaryText.split(' ').slice(0, displayedWordIndex).join(' ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(FileUploadForm, \"1QJOwDAO70Rltl6leaHjyaVZpDo=\", false, function () {\n  return [useFormik];\n});\n_c = FileUploadForm;\nexport default FileUploadForm;\nvar _c;\n$RefreshReg$(_c, \"FileUploadForm\");","map":{"version":3,"names":["React","useState","useFormik","Yup","axios","jsxDEV","_jsxDEV","FileUploadForm","_s","initialValues","file","summeryData","SetSummeryData","orignalText","SetOrignalText","summeryText","SetSummeryText","displayedWordIndex","setDisplayedWordIndex","validationSchema","object","mixed","required","test","value","type","onSubmit","values","formData","FormData","append","response","post","data","jsonData","original_text","resulted_text","summary_text","console","log","error","formik","useEffect","intervalId","setInterval","prevIndex","summaryText","split","length","clearInterval","handleSubmit","children","htmlFor","className","fileName","_jsxFileName","lineNumber","columnNumber","id","name","onChange","event","setFieldValue","target","files","onBlur","handleBlur","touched","errors","style","color","slice","join","_c","$RefreshReg$"],"sources":["/home/hassan/python task/frontend/src/components/FileUploadForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\n\nconst FileUploadForm = () => {\n    const initialValues = { file: null };\n    const [summeryData, SetSummeryData] = useState({})\n    const [orignalText, SetOrignalText] = useState(null)\n    const [summeryText, SetSummeryText] = useState(null)\n    const [displayedWordIndex, setDisplayedWordIndex] = useState(0);\n\n    const validationSchema = Yup.object({\n        file: Yup.mixed().required('File is required').test(\n            'fileFormat',\n            'Invalid file format. Only PDF files are allowed.',\n            (value) => value && value.type === 'application/pdf'\n        ),\n    });\n\n    const onSubmit = async (values) => {\n        try {\n            const formData = new FormData();\n            formData.append('file', values.file);\n\n            const response = await axios.post('http://127.0.0.1:5000/api/upload', formData);\n\n            SetSummeryData(response.data)\n            let jsonData = response.data\n            // console.log(\"response.original_text\",response.original_text);\n            // console.log(\"response.resulted_text.summary_text\",response.resulted_text.summary_text);\n\n            if (response) {\n\n                SetOrignalText(jsonData.original_text);\n                SetSummeryText(jsonData.resulted_text.summary_text);\n            }\n            console.log(\"data\", orignalText, summeryText)\n\n        } catch (error) {\n            console.error('Error uploading file:', error);\n        }\n    };\n\n    const formik = useFormik({\n        initialValues,\n        validationSchema,\n        onSubmit,\n    });\n\n    useEffect(() => {\n        // Display words one by one with a delay of 500 milliseconds\n        const intervalId = setInterval(() => {\n          setDisplayedWordIndex((prevIndex) => prevIndex + 1);\n        }, 500);\n    \n        // Clear the interval when all words are displayed\n        if (displayedWordIndex === summaryText.split(' ').length) {\n          clearInterval(intervalId);\n        }\n    \n        // Cleanup function to clear the interval when the component unmounts\n        return () => clearInterval(intervalId);\n      }, [displayedWordIndex, summaryText]);\n\n    return (\n        <form onSubmit={formik.handleSubmit}>\n            <div>\n                <label htmlFor=\"file\" className=\"form-label\">Upload PDF for Text Summarization</label>\n                <input\n                    id=\"file\"\n                    name=\"file\"\n                    type=\"file\"\n                    className=\"form-control\"\n                    onChange={(event) => formik.setFieldValue('file', event.target.files[0])}\n                    onBlur={formik.handleBlur}\n                />\n                {formik.touched.file && formik.errors.file ? (\n                    <div style={{ color: 'red' }}>{formik.errors.file}</div>\n                ) : null}\n            </div>\n\n            {/* <div className={ !summeryData ? \"displayLoader\" : \"hideLoader\"}>\n                <div className='spinner-border mt-3'  role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n            </div> */}\n\n\n            <div>\n                <button type=\"submit\" className=\"btn btn-primary mt-3\">Submit</button>\n            </div>\n\n            {orignalText ? (\n                <div>\n                    <p>{orignalText}</p>\n                </div>\n            ) : null}\n\n            {summeryText ? (\n                <div>\n                    <p>{summaryText.split(' ').slice(0, displayedWordIndex).join(' ')}</p>\n                </div>\n            ) : null}\n        </form>\n    );\n};\n\nexport default FileUploadForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}